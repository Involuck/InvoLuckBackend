# Docker Compose configuration for InvoLuck Backend
# Development and local testing environment

version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: involuck-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-involuck}
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - involuck-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis Cache (Optional - for future features)
  redis:
    image: redis:7-alpine
    container_name: involuck-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - involuck-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MailHog for email testing in development
  mailhog:
    image: mailhog/mailhog:latest
    container_name: involuck-mailhog
    restart: unless-stopped
    ports:
      - "${MAILHOG_SMTP_PORT:-1025}:1025"  # SMTP port
      - "${MAILHOG_WEB_PORT:-8025}:8025"   # Web interface
    networks:
      - involuck-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8025"]
      interval: 30s
      timeout: 10s
      retries: 3

  # InvoLuck Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: involuck-api
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${PORT:-5000}
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/${MONGO_DATABASE:-involuck}?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      SMTP_USER: ""
      SMTP_PASS: ""
      SMTP_FROM: ${SMTP_FROM:-"InvoLuck <no-reply@involuck.dev>"}
      LOG_LEVEL: ${LOG_LEVEL:-debug}
    ports:
      - "${API_PORT:-5000}:5000"
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - involuck-network
    depends_on:
      mongodb:
        condition: service_healthy
      mailhog:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Nginx reverse proxy (for production-like setup)
  nginx:
    image: nginx:alpine
    container_name: involuck-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./logs/nginx:/var/log/nginx
    networks:
      - involuck-network
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  redis_data:
    driver: local

networks:
  involuck-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Environment variables can be set in .env file:
# MONGO_ROOT_USERNAME=admin
# MONGO_ROOT_PASSWORD=securepassword123
# MONGO_DATABASE=involuck
# JWT_SECRET=your-very-secure-jwt-secret-key
# NODE_ENV=development
# API_PORT=5000
# NGINX_PORT=80
